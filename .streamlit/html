<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DeepCheck - AI Deepfake Detection</title>
    <meta name="description" content="Your Trusted AI Shield Against Deepfakes">
    
    <!-- Elegant Modern Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Rajdhani:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --background: 222 15% 8%;
            --foreground: 210 20% 95%;
            --card: 222 15% 12%;
            --card-foreground: 210 20% 95%;
            --primary: 180 100% 70%;
            --secondary: 280 50% 75%;
            --muted: 222 15% 18%;
            --muted-foreground: 210 20% 70%;
            --accent: 320 60% 80%;
            --destructive: 0 84% 60%;
            --border: 222 15% 25%;
            --elegant-teal: 180 100% 70%;
            --elegant-mint: 160 100% 75%;
            --elegant-lavender: 280 50% 75%;
            --elegant-peach: 320 60% 80%;
            --glass-bg: 222 15% 8%;
        }

        body {
            font-family: 'Rajdhani', sans-serif;
            background: hsl(var(--background));
            color: hsl(var(--foreground));
            line-height: 1.6;
            overflow-x: hidden;
        }

        .orbitron {
            font-family: 'Orbitron', monospace;
        }

        .rajdhani {
            font-family: 'Rajdhani', sans-serif;
        }

        .glass-morphism {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
        }

        .elegant-hover {
            transition: all 0.3s ease;
        }

        .elegant-hover:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        }

        .gradient-text {
            background: linear-gradient(45deg, hsl(var(--elegant-teal)), hsl(var(--elegant-mint)));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .btn-primary {
            background: linear-gradient(45deg, hsl(var(--elegant-teal)), hsl(var(--elegant-mint)));
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 12px;
            font-family: 'Orbitron', monospace;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }

        .btn-primary:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .upload-zone {
            border: 2px dashed hsl(var(--elegant-teal));
            border-radius: 20px;
            padding: 60px 20px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.02);
        }

        .upload-zone:hover {
            border-color: hsl(var(--elegant-mint));
            background: rgba(255, 255, 255, 0.05);
        }

        .upload-zone.dragover {
            background: rgba(64, 224, 208, 0.1);
            border-color: hsl(var(--elegant-mint));
        }

        .progress-bar {
            width: 100%;
            height: 8px;
            background: hsl(var(--muted));
            border-radius: 4px;
            overflow: hidden;
            margin: 20px 0;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, hsl(var(--elegant-teal)), hsl(var(--elegant-mint)));
            transition: width 0.3s ease;
        }

        .result-card {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            padding: 30px;
            margin: 20px 0;
            text-align: center;
        }

        .result-authentic {
            border-color: #4ade80;
        }

        .result-fake {
            border-color: #ef4444;
        }

        .spinner {
            border: 3px solid rgba(255, 255, 255, 0.1);
            border-top: 3px solid hsl(var(--elegant-teal));
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .floating-shapes {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
        }

        .shape {
            position: absolute;
            opacity: 0.1;
            animation: float 6s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-20px); }
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .hero {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            background: radial-gradient(circle at 50% 50%, rgba(64, 224, 208, 0.1) 0%, transparent 70%);
        }

        .section {
            padding: 80px 0;
        }

        .grid {
            display: grid;
            gap: 30px;
        }

        .grid-2 {
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        }

        .grid-3 {
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        }

        .hidden {
            display: none;
        }

        .feature-card {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            padding: 30px;
            text-align: center;
            transition: all 0.3s ease;
        }

        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        }

        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .modal-content {
            background: hsl(var(--card));
            border-radius: 20px;
            padding: 40px;
            max-width: 500px;
            width: 90%;
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .close-btn {
            background: none;
            border: none;
            color: hsl(var(--foreground));
            font-size: 24px;
            cursor: pointer;
            float: right;
            margin-top: -10px;
        }

        textarea {
            width: 100%;
            min-height: 120px;
            background: hsl(var(--muted));
            border: 1px solid hsl(var(--border));
            border-radius: 12px;
            padding: 15px;
            color: hsl(var(--foreground));
            font-family: 'Rajdhani', sans-serif;
            font-size: 16px;
            resize: vertical;
            margin: 20px 0;
        }

        .footer {
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            padding: 60px 0;
            text-align: center;
        }

        .social-links {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin: 30px 0;
        }

        .social-link {
            display: inline-block;
            padding: 10px;
            color: hsl(var(--muted-foreground));
            transition: color 0.3s ease;
        }

        .social-link:hover {
            color: hsl(var(--elegant-teal));
        }

        @media (max-width: 768px) {
            .hero h1 {
                font-size: 2.5rem;
            }
            
            .upload-zone {
                padding: 40px 20px;
            }
            
            .modal-content {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <!-- Floating Background Shapes -->
    <div class="floating-shapes">
        <div class="shape" style="width: 100px; height: 100px; background: linear-gradient(45deg, hsl(var(--elegant-teal)), hsl(var(--elegant-mint))); border-radius: 50%; top: 10%; left: 5%; animation-delay: 0s;"></div>
        <div class="shape" style="width: 80px; height: 80px; background: linear-gradient(45deg, hsl(var(--elegant-lavender)), hsl(var(--elegant-peach))); border-radius: 20px; top: 20%; right: 10%; animation-delay: 2s;"></div>
        <div class="shape" style="width: 60px; height: 60px; background: linear-gradient(45deg, hsl(var(--elegant-mint)), hsl(var(--elegant-teal))); border-radius: 50%; bottom: 30%; left: 20%; animation-delay: 4s;"></div>
    </div>

    <!-- Hero Section -->
    <section class="hero">
        <div class="container">
            <div style="margin-bottom: 30px;">
                <div style="width: 80px; height: 80px; margin: 0 auto; background: linear-gradient(45deg, hsl(var(--elegant-teal)), hsl(var(--elegant-mint))); border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 2rem;">🛡</div>
            </div>
            <h1 class="orbitron" style="font-size: 4rem; font-weight: 900; margin-bottom: 20px;">
                <span class="gradient-text">DEEPCHECK</span>
            </h1>
            <p style="font-size: 1.5rem; margin-bottom: 40px; color: hsl(var(--muted-foreground)); max-width: 600px; margin-left: auto; margin-right: auto;">
                Your Trusted AI Shield Against Deepfakes
            </p>
            <p style="font-size: 1.2rem; color: hsl(var(--muted-foreground)); margin-bottom: 50px;">
                Elegant AI-powered deepfake detection platform
            </p>
            <button class="btn-primary" onclick="scrollToUpload()">
                Start Detection
            </button>
        </div>
    </section>

    <!-- Upload Section -->
    <section class="section" id="upload-section">
        <div class="container">
            <div style="text-align: center; margin-bottom: 50px;">
                <h2 class="orbitron" style="font-size: 2.5rem; margin-bottom: 20px;">
                    <span class="gradient-text">Upload & Analyze</span>
                </h2>
                <p style="font-size: 1.2rem; color: hsl(var(--muted-foreground));">
                    Upload your image or video for AI-powered deepfake detection
                </p>
            </div>

            <div class="upload-zone" id="upload-zone" onclick="document.getElementById('file-input').click()">
                <input type="file" id="file-input" accept="image/,video/" style="display: none;" onchange="handleFileUpload(this)">
                <div id="upload-content">
                    <div style="font-size: 4rem; margin-bottom: 20px;">📁</div>
                    <h3 class="orbitron" style="font-size: 1.5rem; margin-bottom: 15px;">Drop your file here</h3>
                    <p style="color: hsl(var(--muted-foreground)); margin-bottom: 20px;">or click to browse</p>
                    <p style="color: hsl(var(--muted-foreground)); font-size: 0.9rem;">Supports: JPG, PNG, MP4, MOV (Max 100MB)</p>
                </div>
            </div>

            <div id="analysis-section" class="hidden">
                <div class="result-card">
                    <h3 class="orbitron" style="font-size: 1.5rem; margin-bottom: 20px;">Analyzing...</h3>
                    <div class="spinner"></div>
                    <div class="progress-bar">
                        <div class="progress-fill" id="progress-fill" style="width: 0%"></div>
                    </div>
                    <p id="analysis-status">Processing your file...</p>
                </div>
            </div>

            <div id="results-section" class="hidden">
                <div class="result-card" id="result-card">
                    <div id="result-icon" style="font-size: 4rem; margin-bottom: 20px;"></div>
                    <h3 class="orbitron" id="result-title" style="font-size: 2rem; margin-bottom: 20px;"></h3>
                    <div class="progress-bar">
                        <div class="progress-fill" id="confidence-bar"></div>
                    </div>
                    <p id="confidence-text" style="font-size: 1.2rem; margin-bottom: 30px;"></p>
                    <button class="btn-primary" onclick="resetAnalysis()">Analyze Another File</button>
                </div>
            </div>
        </div>
    </section>

    <!-- Features Section -->
    <section class="section">
        <div class="container">
            <div style="text-align: center; margin-bottom: 50px;">
                <h2 class="orbitron" style="font-size: 2.5rem; margin-bottom: 20px;">
                    <span class="gradient-text">AI-Powered Detection</span>
                </h2>
                <p style="font-size: 1.2rem; color: hsl(var(--muted-foreground));">
                    Advanced neural network analysis for maximum accuracy
                </p>
            </div>

            <div class="grid grid-3">
                <div class="feature-card">
                    <div style="font-size: 3rem; margin-bottom: 20px;">👁</div>
                    <h3 class="orbitron" style="font-size: 1.3rem; margin-bottom: 15px;">Visual Integrity Scan</h3>
                    <p style="color: hsl(var(--muted-foreground));">Advanced pixel-level analysis for authenticity detection</p>
                </div>
                <div class="feature-card">
                    <div style="font-size: 3rem; margin-bottom: 20px;">⚡</div>
                    <h3 class="orbitron" style="font-size: 1.3rem; margin-bottom: 15px;">Real-time Processing</h3>
                    <p style="color: hsl(var(--muted-foreground));">Lightning-fast analysis with instant results</p>
                </div>
                <div class="feature-card">
                    <div style="font-size: 3rem; margin-bottom: 20px;">🛡</div>
                    <h3 class="orbitron" style="font-size: 1.3rem; margin-bottom: 15px;">Security First</h3>
                    <p style="color: hsl(var(--muted-foreground));">Your files are processed securely and not stored</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="footer">
        <div class="container">
            <div style="display: flex; align-items: center; justify-content: center; gap: 10px; margin-bottom: 20px;">
                <div style="color: hsl(var(--elegant-peach)); font-size: 1.2rem;">❤</div>
                <h3 style="font-size: 1.5rem;">
                    <span class="gradient-text">Thank you for trusting DeepCheck</span>
                </h3>
            </div>
            <p style="color: hsl(var(--muted-foreground)); margin-bottom: 30px;">
                Together, we're building a more authentic digital world through elegant technology.
            </p>
            <div class="social-links">
                <a href="#" class="social-link">🐦 Twitter</a>
                <a href="#" class="social-link">📸 Instagram</a>
                <a href="#" class="social-link">💼 LinkedIn</a>
                <a href="#" class="social-link">🔗 GitHub</a>
            </div>
            <button class="btn-primary" onclick="showFeedbackModal()">Share Feedback</button>
        </div>
    </footer>

    <!-- Feedback Modal -->
    <div id="feedback-modal" class="modal hidden">
        <div class="modal-content">
            <button class="close-btn" onclick="hideFeedbackModal()">&times;</button>
            <div style="display: flex; align-items: center; gap: 15px; margin-bottom: 30px;">
                <div style="width: 50px; height: 50px; background: linear-gradient(45deg, hsl(var(--elegant-teal)), hsl(var(--elegant-mint))); border-radius: 50%; display: flex; align-items: center; justify-content: center; font-size: 1.5rem;">💬</div>
                <h3 class="orbitron" style="font-size: 1.5rem;">
                    <span class="gradient-text">Share Your Thoughts</span>
                </h3>
            </div>
            <textarea id="feedback-text" placeholder="Tell us about your experience with DeepCheck..."></textarea>
            <button class="btn-primary" onclick="submitFeedback()">Send Feedback</button>
        </div>
    </div>

    <script>
        // Global variables
        let currentFile = null;
        const API_BASE_URL = 'http://localhost:8000'; // Update this to your backend URL

        // Utility functions
        function scrollToUpload() {
            document.getElementById('upload-section').scrollIntoView({ behavior: 'smooth' });
        }

        function showFeedbackModal() {
            document.getElementById('feedback-modal').classList.remove('hidden');
        }

        function hideFeedbackModal() {
            document.getElementById('feedback-modal').classList.add('hidden');
        }

        function submitFeedback() {
            const feedback = document.getElementById('feedback-text').value;
            if (feedback.trim()) {
                console.log('Feedback submitted:', feedback);
                // Here you would typically send the feedback to your backend
                alert('Thank you for your feedback!');
                document.getElementById('feedback-text').value = '';
                hideFeedbackModal();
            }
        }

        // File upload handling
        function handleFileUpload(input) {
            const file = input.files[0];
            if (!file) return;

            if (file.size > 100 * 1024 * 1024) { // 100MB limit
                alert('File size must be less than 100MB');
                return;
            }

            if (!file.type.startsWith('image/') && !file.type.startsWith('video/')) {
                alert('Please upload an image or video file');
                return;
            }

            currentFile = file;
            startAnalysis();
        }

        // Drag and drop functionality
        const uploadZone = document.getElementById('upload-zone');

        uploadZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadZone.classList.add('dragover');
        });

        uploadZone.addEventListener('dragleave', (e) => {
            e.preventDefault();
            uploadZone.classList.remove('dragover');
        });

        uploadZone.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadZone.classList.remove('dragover');
            
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                const file = files[0];
                if (file.size > 100 * 1024 * 1024) {
                    alert('File size must be less than 100MB');
                    return;
                }
                if (!file.type.startsWith('image/') && !file.type.startsWith('video/')) {
                    alert('Please upload an image or video file');
                    return;
                }
                currentFile = file;
                startAnalysis();
            }
        });

        // Analysis functions
        function startAnalysis() {
            // Hide upload section and show analysis
            document.getElementById('upload-content').style.display = 'none';
            document.getElementById('analysis-section').classList.remove('hidden');
            document.getElementById('results-section').classList.add('hidden');

            // Start progress animation
            animateProgress();

            // Send file to backend
            analyzeFile();
        }

        function animateProgress() {
            const progressFill = document.getElementById('progress-fill');
            const statusText = document.getElementById('analysis-status');
            
            const steps = [
                { progress: 20, text: 'Preprocessing image...' },
                { progress: 40, text: 'Running neural network analysis...' },
                { progress: 60, text: 'Detecting facial features...' },
                { progress: 80, text: 'Calculating confidence scores...' },
                { progress: 100, text: 'Analysis complete!' }
            ];

            let currentStep = 0;
            const stepInterval = setInterval(() => {
                if (currentStep < steps.length) {
                    const step = steps[currentStep];
                    progressFill.style.width = step.progress + '%';
                    statusText.textContent = step.text;
                    currentStep++;
                } else {
                    clearInterval(stepInterval);
                }
            }, 800);
        }

        async function analyzeFile() {
            if (!currentFile) return;

            const formData = new FormData();
            formData.append('file', currentFile);

            try {
                const response = await fetch(${API_BASE_URL}/analyze/, {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error('Analysis failed');
                }

                const result = await response.json();
                
                // Wait for animation to complete
                setTimeout(() => {
                    showResults(result);
                }, 4000);

            } catch (error) {
                console.error('Error:', error);
                setTimeout(() => {
                    showError('Analysis failed. Please try again.');
                }, 4000);
            }
        }

        function showResults(result) {
            document.getElementById('analysis-section').classList.add('hidden');
            document.getElementById('results-section').classList.remove('hidden');

            const resultCard = document.getElementById('result-card');
            const resultIcon = document.getElementById('result-icon');
            const resultTitle = document.getElementById('result-title');
            const confidenceBar = document.getElementById('confidence-bar');
            const confidenceText = document.getElementById('confidence-text');

            const isReal = result.prediction === 'REAL';
            const confidence = result.confidence;

            if (isReal) {
                resultCard.classList.add('result-authentic');
                resultCard.classList.remove('result-fake');
                resultIcon.textContent = '✅';
                resultTitle.textContent = 'AUTHENTIC';
                resultTitle.style.color = '#4ade80';
            } else {
                resultCard.classList.add('result-fake');
                resultCard.classList.remove('result-authentic');
                resultIcon.textContent = '⚠';
                resultTitle.textContent = 'DEEPFAKE DETECTED';
                resultTitle.style.color = '#ef4444';
            }

            confidenceBar.style.width = confidence + '%';
            confidenceText.textContent = Confidence: ${confidence.toFixed(1)}%;
        }

        function showError(message) {
            document.getElementById('analysis-section').classList.add('hidden');
            document.getElementById('results-section').classList.remove('hidden');

            const resultCard = document.getElementById('result-card');
            const resultIcon = document.getElementById('result-icon');
            const resultTitle = document.getElementById('result-title');
            const confidenceBar = document.getElementById('confidence-bar');
            const confidenceText = document.getElementById('confidence-text');

            resultCard.classList.add('result-fake');
            resultCard.classList.remove('result-authentic');
            resultIcon.textContent = '❌';
            resultTitle.textContent = 'ERROR';
            resultTitle.style.color = '#ef4444';
            confidenceBar.style.width = '0%';
            confidenceText.textContent = message;
        }

        function resetAnalysis() {
            currentFile = null;
            document.getElementById('file-input').value = '';
            document.getElementById('upload-content').style.display = 'block';
            document.getElementById('analysis-section').classList.add('hidden');
            document.getElementById('results-section').classList.add('hidden');
            document.getElementById('progress-fill').style.width = '0%';
        }

        // Initialize app
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DeepCheck app initialized');
        });
    </script>
</body>
</html>
